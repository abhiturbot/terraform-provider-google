name: Build and Release ARM64 Binary

# on:
#   push:
#     tags:
#       - 'v*'
on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version to release (must be prefixed with 'v')"
        required: true
        
jobs:
  build:
    name: Build ARM64 Binary
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract Version
        id: extract_version
        run: |
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Checkout specific version
        run: |
          git fetch --all --tags
          git checkout ${{ env.VERSION }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.16'        

      - name: Build Linux ARM64 Binary
        run: |
          CGO_ENABLED=0 GOARCH=arm64 GOOS=linux go build -o terraform-provider-google_${{ env.VERSION }}_linux_arm64

      - name: Build Darwin ARM64 Binary
        run: |
          CGO_ENABLED=0 GOARCH=arm64 GOOS=darwin go build -o terraform-provider-google_${{ env.VERSION }}_darwin_arm64

      - name: Upload Linux Binary as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: terraform-provider-google_${{ env.VERSION }}_linux_arm64
          path: terraform-provider-google_${{ env.VERSION }}_linux_arm64

      - name: Upload Darwin Binary as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: terraform-provider-google_${{ env.VERSION }}_darwin_arm64
          path: terraform-provider-google_${{ env.VERSION }}_darwin_arm64

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Extract Version
        id: extract_version
        run: |
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV 
   
      - name: Download Linux Binary
        uses: actions/download-artifact@v3
        with:
          name: terraform-provider-google_${{ env.VERSION }}_linux_arm64

      - name: Download Darwin Binary
        uses: actions/download-artifact@v3
        with:
          name: terraform-provider-google_${{ env.VERSION }}_darwin_arm64          

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          repository: ${{ github.repository }}
          files: |-
            terraform-provider-google_${{ env.VERSION }}_darwin_arm64
            terraform-provider-google_${{ env.VERSION }}_linux_arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}